@use '@angular/material' as mat;

@import 'common';

$typography: mat.define-typography-config();

app-tabs-selector {
  .container {
    display: flex;
    flex-direction: column;
    max-width: 25rem;
    overflow: hidden;

    .mat-list-base .mat-list-option .mat-list-text {
      display: block;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex: 0 0 0;
      min-height: 3rem;
      padding: 0.5rem;

      .heading {
        @include mat.typography-level($typography, subheading-1);

        margin-left: 0.5rem;
      }

      .controls {
        display: flex;
        align-items: center;

        .checkbox-container {
          align-items: center;
          display: flex;
          height: 2.5rem;
          justify-content: center;
          width: 2rem;
        }
      }
    }

    .list-container {
      overflow: hidden;

      .mat-list-item {
        height: 4rem;
      }

      .mat-list-base {
        padding: 0;
      }

      .list-item {
        display: flex;
        align-items: center;
        gap: 1rem;

        .item-text {
          overflow: hidden;
          text-overflow: ellipsis;

          .item-title,
          .item-subtitle {
            overflow: hidden;
            text-overflow: ellipsis;
          }

          .item-title {
            @include mat.typography-level($typography, body-1);
          }

          .item-subtitle {
            @include mat.typography-level($typography, caption);

            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin: 0;
            padding: 0;

            .mat-icon {
              font-size: 1rem;
              height: 1rem;
              width: auto;
            }
          }
        }
      }
    }
  }
}

@include theme using($theme) {
  app-tabs-selector {
    .container {
      color: getPaletteColor(getForegroundPalette($theme), secondary-text);

      .list-container .list-item {
        color: getPaletteColor(getForegroundPalette($theme), secondary-text);

        .item-subtitle {
          color: getPaletteColor(getForegroundPalette($theme), hint-text);
        }
      }
    }
  }
}
