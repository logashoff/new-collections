@use '@angular/material' as mat;
@import 'theme';

@include component-theme using($theme) {
  app-panel-header {
    .title {
      color: get-palette-color(get-foreground-palette($theme), secondary-text);

      .text:first-of-type {
        color: get-palette-color(get-foreground-palette($theme), text);
      }
    }

    .description {
      color: get-palette-color(get-foreground-palette($theme), secondary-text);

      .total {
        background-color: get-palette-color(get-background-palette($theme), disabled-list-option);
      }
    }

    .icons-container .overflow {
      color: get-palette-color(get-foreground-palette($theme), disabled-text);
    }
  }
}

$typography-config: mat.m2-get-typography-config($dark-theme);

app-panel-header {
  display: block;
  height: inherit;

  .header-container {
    display: flex;
    height: inherit;
    align-items: center;
    justify-content: space-between;
    margin: 0 0.5rem;
    overflow: hidden;
    gap: 1rem;
    min-height: 3rem;

    &.disabled {
      pointer-events: none;
    }

    &:not(.disabled):hover {
      .description {
        .fav {
          display: flex;
        }

        .total {
          display: none;
        }
      }
    }
  }

  .title {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 1 1 0;

    .text:not(:last-of-type) {
      margin-right: 0.625rem;

      &::after {
        content: ',';
      }
    }
  }

  .description {
    white-space: nowrap;

    display: flex;
    align-items: center;
    justify-content: center;

    .total {
      @include mat.m2-typography-level($typography-config, caption);
    }

    .total,
    .fav {
      width: 1.75rem;
      height: 1.75rem;
      align-items: center;
      justify-content: center;
      border-radius: 2rem;
    }

    .total {
      display: flex;
    }

    .fav {
      display: none;
    }
  }
}
